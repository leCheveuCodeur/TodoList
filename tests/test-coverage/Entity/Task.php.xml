<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Task.php" path="\Entity">
    <totals>
      <lines total="113" comments="26" code="87" executable="16" executed="16" percent="100.00"/>
      <methods count="11" tested="11" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Entity\Task" start="12" executable="16" executed="16" crap="11">
      <namespace name="App\Entity"/>
      <method name="getId" signature="getId(): ?int" start="49" end="52" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getCreatedAt" signature="getCreatedAt(): ?DateTimeInterface" start="54" end="57" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setCreatedAt" signature="setCreatedAt(DateTimeInterface $createdAt): self" start="59" end="64" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getTitle" signature="getTitle(): ?string" start="66" end="69" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setTitle" signature="setTitle(string $title): self" start="71" end="76" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getContent" signature="getContent(): ?string" start="78" end="81" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setContent" signature="setContent(string $content): self" start="83" end="88" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getIsDone" signature="getIsDone(): ?bool" start="90" end="93" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="toggle" signature="toggle(bool $isDone): self" start="95" end="100" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getAuthor" signature="getAuthor(): ?App\Entity\User" start="102" end="105" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setAuthor" signature="setAuthor(?App\Entity\User $author): self" start="107" end="112" crap="1" executable="2" executed="2" coverage="100"/>
    </class>
    <coverage>
      <line nr="51">
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
      </line>
      <line nr="56">
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
      </line>
      <line nr="61">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="63">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="68">
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
      </line>
      <line nr="73">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="75">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="80">
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
      </line>
      <line nr="85">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="87">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="92">
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
      </line>
      <line nr="97">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="99">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="104">
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="109">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="111">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Entity</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Repository</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">TaskRepository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ORM</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Mapping</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ORM</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Validator</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Constraints</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Assert</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * @ORM\Entity(repositoryClass=TaskRepository::class)</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="12">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Task</token>
      </line>
      <line no="13">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">     * @ORM\Id</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     * @ORM\GeneratedValue</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="integer")</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="datetime")</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$createdAt</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25"/>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string", length=255)</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     * @Assert\NotBlank(message="Vous devez saisir un titre.")</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$title</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="text")</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     * @Assert\NotBlank(message="Vous devez saisir un contenu.")</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="boolean")</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isDone</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     * @ORM\ManyToOne(targetEntity=User::class, inversedBy="tasks")</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     * @ORM\JoinColumn(nullable=true)</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$author</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="53"/>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getCreatedAt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">DateTimeInterface</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createdAt</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="58"/>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setCreatedAt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">DateTimeInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$createdAt</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createdAt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$createdAt</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62"/>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="65"/>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getTitle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">title</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="70"/>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setTitle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$title</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">title</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$title</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74"/>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="77"/>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">content</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="82"/>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">content</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86"/>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getIsDone</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isDone</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="94"/>
      <line no="95">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">toggle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isDone</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isDone</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isDone</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98"/>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="101"/>
      <line no="102">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getAuthor</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">User</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">author</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="106"/>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setAuthor</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">User</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$author</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">author</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$author</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110"/>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="113">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="114"/>
    </source>
  </file>
</phpunit>
