<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="User.php" path="\Entity">
    <totals>
      <lines total="188" comments="55" code="133" executable="29" executed="29" percent="100.00"/>
      <methods count="16" tested="16" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Entity\User" start="16" executable="29" executed="29" crap="19">
      <namespace name="App\Entity"/>
      <method name="__construct" signature="__construct()" start="58" end="61" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getUserIdentifier" signature="getUserIdentifier(): string" start="68" end="71" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getId" signature="getId(): ?int" start="73" end="76" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getUsername" signature="getUsername(): string" start="81" end="84" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setUsername" signature="setUsername(string $username): self" start="86" end="91" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getRoles" signature="getRoles(): array" start="96" end="103" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="setRoles" signature="setRoles(array $roles): self" start="105" end="110" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getPassword" signature="getPassword(): ?string" start="115" end="118" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setPassword" signature="setPassword(string $password): self" start="120" end="125" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getSalt" signature="getSalt(): ?string" start="133" end="136" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="eraseCredentials" signature="eraseCredentials()" start="141" end="145" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getEmail" signature="getEmail(): ?string" start="147" end="150" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setEmail" signature="setEmail(string $email): self" start="152" end="157" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getTasks" signature="getTasks(): Doctrine\Common\Collections\Collection" start="162" end="165" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="addTask" signature="addTask(App\Entity\Task $task): self" start="167" end="175" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="removeTask" signature="removeTask(App\Entity\Task $task): self" start="177" end="187" crap="3" executable="4" executed="4" coverage="100"/>
    </class>
    <coverage>
      <line nr="60">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="61">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="70">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
      </line>
      <line nr="75">
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
      </line>
      <line nr="83">
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
      </line>
      <line nr="88">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="90">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="98">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
      </line>
      <line nr="100">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
      </line>
      <line nr="102">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
      </line>
      <line nr="107">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="109">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="117">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
      </line>
      <line nr="122">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="124">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="135">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
      </line>
      <line nr="145">
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
      </line>
      <line nr="149">
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
      </line>
      <line nr="154">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="156">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="164">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="169">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="170">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="171">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="174">
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\DefaultControllerTest::testAccessHomepageWithNoAutenticated"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithValidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLoginWithInvalidCredentials"/>
        <covered by="App\Tests\Func\Controller\LoginControllerTest::testLogout"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #3"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithNoAuthenticated with data set #4"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testAccessTaskUriWithAutenticated"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testEditingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithoutRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testDeletingAnonymousTaskWithRights"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testCreateNewTask"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #0"/>
        <covered by="App\Tests\Func\Controller\TaskControllerTest::testToggleOnTask with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithNoAuthenticated with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedButNoAdminRole"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #0"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #1"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testAccessUserUriWithAutenticatedAndAdminRole with data set #2"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testEditingUserWithoutRights"/>
        <covered by="App\Tests\Func\Controller\UserControllerTest::testCreateNewUser"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsValid"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoTitleEntered"/>
        <covered by="App\Tests\TaskTest::testTaskEntityIsInvalidBecauseNoContentEntered"/>
        <covered by="App\Tests\TaskTest::testGetCreatedDateOfTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsValid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoUsernameEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoEmailEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseEmailInvalid"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testUserEntityIsInvalidBecauseNoPasswordEntered"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testGetUserTask"/>
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="179">
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="181">
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="182">
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
      <line nr="186">
        <covered by="App\Tests\Unit\Entity\UserTest::testRemoveUserTask"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Entity</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Repository</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UserRepository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Common</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Collections</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ArrayCollection</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Common</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Collections</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Collection</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ORM</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Mapping</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ORM</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Security</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Core</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">User</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">PasswordAuthenticatedUserInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Security</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Core</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">User</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UserInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Validator</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Constraints</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Assert</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> * @ORM\Entity(repositoryClass=UserRepository::class)</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="16">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserInterface</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PasswordAuthenticatedUserInterface</token>
      </line>
      <line no="17">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     * @ORM\Id</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     * @ORM\GeneratedValue</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="integer")</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string", length=180, unique=true)</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * @Assert\NotBlank(message="Vous devez saisir un nom d'utilisateur.")</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="json")</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$roles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35"/>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     * @var string The hashed password</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string")</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     * @Assert\NotBlank(message="Vous devez saisir un mot de passe.")</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string", length=255)</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     * @Assert\NotBlank(message="Vous devez saisir une adresse email.")</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     * @Assert\Email(message="Le format de l'adresse n'est pas correcte.")</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49"/>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     * @ORM\OneToMany(targetEntity=Task::class, mappedBy="author", orphanRemoval=true)</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tasks</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54"/>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ROLE_ADMIN</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ROLE_ADMIN'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ROLE_USER</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ROLE_USER'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57"/>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tasks</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayCollection</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62"/>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     * The public representation of the user (e.g. a username, an email address, etc.)</token>
      </line>
      <line no="65">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     * @see UserInterface</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getUserIdentifier</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="72"/>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="77"/>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="79">
        <token name="T_DOC_COMMENT">     * @deprecated since Symfony 5.3</token>
      </line>
      <line no="80">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getUsername</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="85"/>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setUsername</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">username</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="92"/>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="94">
        <token name="T_DOC_COMMENT">     * @see UserInterface</token>
      </line>
      <line no="95">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRoles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$roles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">roles</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// guarantee every user at least has ROLE_USER</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$roles</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ROLE_USER'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101"/>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_unique</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$roles</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="104"/>
      <line no="105">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setRoles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$roles</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">roles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$roles</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108"/>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="111"/>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="113">
        <token name="T_DOC_COMMENT">     * @see PasswordAuthenticatedUserInterface</token>
      </line>
      <line no="114">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="119"/>
      <line no="120">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">password</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123"/>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126"/>
      <line no="127">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="128">
        <token name="T_DOC_COMMENT">     * Returning a salt is only needed, if you are not using a modern</token>
      </line>
      <line no="129">
        <token name="T_DOC_COMMENT">     * hashing algorithm (e.g. bcrypt or sodium) in your security.yaml.</token>
      </line>
      <line no="130">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="131">
        <token name="T_DOC_COMMENT">     * @see UserInterface</token>
      </line>
      <line no="132">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getSalt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="137"/>
      <line no="138">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="139">
        <token name="T_DOC_COMMENT">     * @see UserInterface</token>
      </line>
      <line no="140">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">eraseCredentials</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// If you store any temporary, sensitive data on the user, clear it here</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// $this-&gt;plainPassword = null;</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="146"/>
      <line no="147">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="151"/>
      <line no="152">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="155"/>
      <line no="156">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="158"/>
      <line no="159">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="160">
        <token name="T_DOC_COMMENT">     * @return Collection|Task[]</token>
      </line>
      <line no="161">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getTasks</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Collection</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tasks</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="166"/>
      <line no="167">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">addTask</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Task</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tasks</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">contains</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tasks</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setAuthor</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="173"/>
      <line no="174">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="176"/>
      <line no="177">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">removeTask</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Task</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tasks</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">removeElement</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// set the owning side to null (unless already changed)</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAuthor</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setAuthor</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="185"/>
      <line no="186">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="188">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="189"/>
    </source>
  </file>
</phpunit>
